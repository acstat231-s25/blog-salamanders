
```{r}
#| label: setup
#| include: false

# Improve digit display and NA display for kable tables
options(scipen = 1, knitr.kable.NA = "")

# Load necessary packages
library(tidyverse)
library(knitr)
library(kableExtra)
library(ggplot2)
library(plotly)
library(ggwordcloud)
library(xfun)
library(RColorBrewer)
library(wordcloud)
library(ggpubr)
library(scales)

```

## Sentiment Analysis

### Sentiment by Year and by Genre

```{r}
#| label: sentiment by year and genre
#| include: true
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

sentiment_data_yearly = read_csv("data/sentiment_by_year.csv")

sentiment_by_year = ggplot(sentiment_data_yearly, aes(x = year, y = average_sentiment)) +
  geom_point(color = "skyblue4", 
             aes(text = paste0("Year: ", year, "<br>",
                               "Average Sentiment: ", average_sentiment, "<br>",
                               "Average Time (sec): ", average_time_seconds, "<br>",
                               "Average BPM (beats per minute): ", average_bpm, "<br>",
                               "Number of Songs: ", num_songs))) +
  geom_smooth() +
  geom_line(color = "skyblue4", linewidth = 0.75, alpha = 0.55) +
  scale_x_continuous(breaks = seq(min(sentiment_data_yearly$year), 
                                  max(sentiment_data_yearly$year), by = 2)) +
  labs(title = "Average Sentiment by Year of 483 Songs out of Top 500 Rolling Stone's Best Songs",
       subtitle = "higher sentiment = more positive, lower sentiment = more negative",
       x = "Year (1953-2006)", y = "Average Sentiment of Lyrics") +
  theme(axis.text.x = element_text(angle = 55, hjust = 1))

ggplotly(sentiment_by_year, tooltip = "text")



sentiment_data_genre = read_csv("data/sentiment_by_genre.csv")

sentiment_by_genre = ggplot(sentiment_data_genre, aes(x = genre, y = average_sentiment)) +
  geom_col(fill = "skyblue4", color = "black",
           aes(text = paste0("Genre: ", genre, "<br>",
                             "Average Sentiment: ", average_sentiment, "<br>",
                             "Average Time (sec): ", average_time_seconds, "<br>",
                             "Average BPM (beats per minute): ", average_bpm, "<br>",
                             "Number of Songs: ", num_songs))) +
  labs(title = "Average Sentiment by Genre of 483 Songs out of Top 500 Rolling Stone's Best Songs",
       subtitle = "higher sentiment = more positive, lower sentiment = more negative",
       x = "Genre", y = "Average Sentiment of Lyrics") +
  theme(axis.text.x = element_text(angle = 55, hjust = 1))

ggplotly(sentiment_by_genre, tooltip = "text")

```

As shown above, we created two visualizations to explore the average sentiment of song lyrics by year and by genre. Hovering over a data point or bar reveals additional information about them, such as the average time, average bpm, and number of songs included in its year/genre.

The line chart for the average sentiment of song lyrics of 483 out of the top 500 best songs list by year demonstrates the overall trends in sentiment from the 1950s to 2000s. We can see that words in song lyrics generally expressed positive sentiment, as 49 out of the 53 years had average sentiment scores greater than zero. The plot does reveal some interesting patterns that might help contextualize the shifts in artistic expression over time and the emotional climate of different years. The trend line for average sentiment seems to be slightly downward sloping over time, which can be due to many factors. For example, music genres such as heavy metal, rock, and rap have been popularized in recent times, and these genres tend to include more words with negative sentiments than other genres. Additionally, the decrease in average sentiment could have been influenced by major events that occurred in specific years. For example, the average sentiment in 2005 was slightly negative (-0.04), which could be due to the fact that Hurricane Katrina hit the United States this year, causing significant damage to the U.S. economy and costing many lives. However, it should be noted that the trend line displayed on the line chart could be skewed and biased, as the many of the points for the later years do not have many songs to use as data. Thus, the decrease in average sentiment likely does not reflect the true nature of the change in sentiment of lyrics over time.

The bar chart for the average sentiment of song lyrics of 483 out of the top 500 best songs list by genre demonstrates the differences in overall sentiment between different genres of music. We can see that genres like dance, disco, and easy generally had the most positive average sentiment scores. This reflects the positive, energetic, and uplifting natures of lyrics used in these genres. On the other hand, genres like Reggae and Slow had negative sentiment scores, which makes sense as songs in these genres often evoke more solemn emotions such as calmness, peace, and melancholy. For rock music, the plot reveals that rock songs in different decades had varying average sentiments. Rock songs in the 1950s, 1960s, and 1980s had lyrics with very positive sentiments (around 0.8), while those in the 1970s and 2000s had pretty low average sentiments. That being said, only one rock song from the 2000s was included on the top 500 best songs list, so that bar does not reflect the actual average sentiment of rock songs in the 2000s.

### Sentiment versus Song Time and BPM

::: {.panel-tabset}

### Sentiment versus Song Time

```{r}
#| label: average sentiment of each song versus time
#| include: true
#| message: false
#| warning: false

sentiment_data_song = read_csv("data/sentiment_by_song.csv")

sentiment_time_by_song = ggplot(sentiment_data_song, 
                                aes(x = time_seconds, y = average_sentiment)) +
  geom_point(size = 0.75,
             aes(color = genre_grouped,
                 text = paste0("Title: ", title, "<br>",
                               "Artist: ", artist, "<br>",
                               "Average Sentiment: ", average_sentiment, "<br>",
                               "Time (sec): ", time_seconds, "<br>",
                               "BPM (beats per minute): ", bpm, "<br>"))) +
  geom_smooth() +
  labs(title = "Average Sentiment versus Time (sec)",
       subtitle = "483 Songs on the Top 500 Rolling Stone's Best Songs List",
       x = "Time (sec)", y = "Average Sentiment",
       color = "Genre")

ggplotly(sentiment_time_by_song, tooltip = "text")
```

### Sentiment versus BPM

```{r}
#| label: average sentiment of each song versus bpm
#| include: true
#| message: false
#| warning: false

sentiment_bpm_by_song = ggplot(sentiment_data_song, 
                               aes(x = bpm, y = average_sentiment)) +
  geom_point(size = 0.75,
             aes(color = genre_grouped,
                 text = paste0("Title: ", title, "<br>",
                               "Artist: ", artist, "<br>",
                               "Average Sentiment: ", average_sentiment, "<br>",
                               "Time (sec): ", time_seconds, "<br>",
                               "BPM (beats per minute): ", bpm, "<br>"))) +
  geom_smooth() +
  labs(title = "Average Sentiment versus Beats Per Minute",
       subtitle = "483 Songs on the Top 500 Rolling Stone's Best Songs List",
       x = "Beats Per Minute", y = "Average Sentiment",
       color = "Genre")

ggplotly(sentiment_bpm_by_song, tooltip = "text")

```

::: 

The two scatterplots above demonstrate the relationship between sentiment and two variables: song time and beats per minute (bpm). Just like the previous plots, hovering over a data point or bar provides a dropdown with more information about the song, such as its title and artist.

The plot for average sentiment versus song time reveals that there is not a well-defined relationship between the two variables. The trend line is generally slightly negatively sloped, which could be an indicator that average sentiment decreases as song time increases. However, this is a very weak relationship that is likely skewed by the few songs (over 600 seconds) that have relatively low average sentiments. Thus, it doesn't seem like song time is a good predictor of average sentiment. 

The second scatterplot also reveals that there is not a strong relationship between average sentiment and bpm. Although the trend line is generally slightly positively sloped, the points are scattered pretty randomly throughout the plot, indicating no clear linear relationship between the two variables. We can conclude that bpm is not a very good predictor of average sentiment amongst 483 songs out the top 500 Rolling Stones best songs list.