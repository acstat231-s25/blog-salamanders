---
title: "Through the Decades"
author: "Claire Albus"
abstract: ""
---

```{r}
#| label: setup
#| include: false

# Improve digit display and NA display for kable tables
options(scipen = 1, knitr.kable.NA = "")

# Load necessary packages
library(tidyverse)
library(knitr)
library(kableExtra)
library(scales)
library(gt)


# set up color palette for the next few plots
 new_palette <- colorRampPalette(colors = c("#6b34eb"
                                            , "#F3AB4D"
                                            , "#eb6309"
                                            , "#d92b1e"
                                            , "#540340"
                                            , "#C6C2B8" ))(6)
 # palette for plot
new_palette2 = colorRampPalette(colors = c("#540340"
                                            , "#eb6309"
                                            , "#d92b1e"))(3)

```


# The 1960s were a Great Decade for Music 

The famous, often infamous, <i>Rolling Stone</i> magazine published its very first issue on November 9th, 1967. On the cover of the first volume of the magazine, John Lennon---one of four British Beatles---appears in a still shot from his role in the film <i>How I Won the War</i>. 

```{r}
#| label: fig-cover
#| fig-cap: Rolling Stone magazine's first ever issue (@cover)
include_graphics("images/Rolling-Stone-Vol-1.jpg") 
```



While the first Top 500 list was not released until 2003, <i>Rolling Stone</i> has set the tone for music journalism from their first issue to this very moment. 

## The Rollin' Sixties

Let's take a look at how the decades shape up compared to one another. 
```{r, message=FALSE}
 #| label: decade favorability
 #| include: true
 #| warning: false
 #| show_col_types: false
 
 
 # necessary data wrangling since r reads the decades as integers instead 
 # of levels in the csv 
 songs_chart = read_csv("data/songs_chart.csv")
 # The inclusion of "The" was a workaround for R reading the decade as an integer
 songs_chart <- songs_chart |>
   mutate(decade = str_remove(songs_chart$decade, "The "))
 
 # build plot
decadent <- songs_chart |> 
   # Create segmented histogram
   ggplot(aes(x = decade, fill = block)) +
     geom_bar(position = "stack", color = "black") +
     scale_fill_manual(values = new_palette, name = "Rank") +
     labs(
         x = "Decade of Release"
       , y = "Number of Songs"
      ) +
     theme_linedraw() +
     theme(axis.title.x = element_text(vjust = -0.3, size = rel(1.5))
           , axis.text.x = element_text(size = rel(1.25))
           , axis.title.y = element_text(size = rel(1.5))
           , axis.text.y = element_text(size = rel(1.25))) 
 

```

```{r}
#| label: fig-decade
#| fig-cap: The above segmented bar chart shows the distribution across decades of Rolling Stone Magazine's Top 500 Songs of All Time from 2013. The colors of the segments show where on the list to find songs from a particular decade.

decadent
```
 

 
 
Above, @fig-decade shows the distribution of the decades represented in <i>Rolling Stone</i> Magazine's Top 500 Songs of All Time. In this, we can see that the 1960s are the clear leader in terms of representation on the list. In fact, roughly 35% of the songs on the list are from the 60s. The 70s follow at around 25%, and the 50s, 80s, and 90s each represent around 10-13% of the list. For more information on this breakdown, see @tbl-dec. There is a clear trend downward from the 60s to the 2000s, with the 2000s being the least represented decade. 
 
Taking a closer look at where the songs fall in the ranking categories, i.e., Top 100, 200s, and so on, we can see that the 1960s have the most songs in the top 100 among all decades. However, this likely follows from the high representation of 1960s songs on the list. Interestingly, even though the 70s have many more songs on the list than the 50s, the 50s have slightly more songs in the Top 100. 
 
### Rolling Stone's Top Three Artists

While all the artists on this list are well-deserving of their flowers, there are three artists who stand out among the rest. Combined, these three artists created nearly 10% (@tbl-artists) of the songs on the list. These artists are, of course, <b>The Beatles</b>, <b>The Rolling Stones</b>, and <b>Bob Dylan</b>.

::: {.panel-tabset}
 
### Top Artists

```{r}
#| label: decades of top artists' songs
#| include: true
#| message: false
#| warning: false


 # necessary data wrangling since r reads the decades as integers instead 
 # of levels in the csv 
 top_artists = read_csv("data/top_artists.csv")

 tops <- top_artists |> 
   # Create segmented histogram
   ggplot(aes(x = artist, fill = decade)) +
     geom_bar(color = "black") +
     scale_fill_manual(values = new_palette, name = "Decade") +
     labs(
         x = "Artist"
       , y = "Number of Songs"
       ) +
     theme_linedraw() +
     theme(axis.title.x = element_text(vjust = -0.3, size = rel(1.5))
           , axis.text.x = element_text(size = rel(1.25))
           , axis.title.y = element_text(size = rel(1.5))
           , axis.text.y = element_text(size = rel(1.25))) 
 
```

```{r}
#| label: fig-tops
#| fig-cap: The segmented bar chart above shows the number of songs each of the top three most represented artists has on the list. The segments show the decade of release of these artists' songs.
tops
```

### Top Sentiments

```{r}
#| label: sentiment of top artists' songs
#| include: true
#| message: false
#| warning: false

# songs_chart = read_csv("data/songs_chart.csv")
sentiment_by_artist = read_csv("data/sentiment_by_artists.csv")

sent <- sentiment_by_artist |>
   ggplot(aes(x = artist, y = mean, fill = artist)) +
   scale_fill_manual(values = new_palette2) +
   geom_col(stat = "identity") +
   labs( 
       x = "Artist"
     , y = "Average Sentiment"
        ) +
   geom_text(aes(label = mean), vjust = -0.125) +
   theme_linedraw() +
   geom_hline(yintercept = 0, linetype = "dashed") +
   guides(fill = FALSE) +
   theme(axis.title.x = element_text(vjust = -0.3, size = rel(1.5))
           , axis.text.x = element_text(size = rel(1.25))
           , axis.title.y = element_text(size = rel(1.5))
           , axis.text.y = element_text(size = rel(1.25)))
```
```{r}
#| label: fig-sent
#| fig-cap: The above graph displays the average sentiment of all songs each of the top three artists has on the list.
sent
```

:::

For music lovers and <i>Rolling Stone</i> Magazine subscription-holders, it will come as little surprise that the top 3 artists represented in Rolling Stone's Top 500 are, in order, The Beatles, The Rolling Stones, and Bob Dylan. The Top Artists chart above demonstrates the margin by which The Beatles' songs outnumber the other two. The Beatles have a stunning 23 songs on the list---25 if you include John Lennon's <i>Imagine</i> and George Harrison's <i>My Sweet Lord</i>. The top ranking song from the supergroup is <i>Hey Jude</i> which ranks at 8 on the list. The Rolling Stones follow The Beatles with 14 songs, their first on the list, <i>Satisfaction</i>, at slot 2. Finally, Bob Dylan's first feature of his 12 total on the list takes the number 1 slot, and that song is <i>Like a Rolling Stone</i>. 

With the magazine, top artists and, songs in mind, you may have noticed a theme among their names. The number one song on the chart, one of the top three artists, and the magazine itself all contain some form of the words "Rollin' Stone." The is no coincidence, the band The Rolling Stones, who debuted in 1962, and Bob Dylan's song <i>Like a Rolling Stone</i> (1965) are both named for the Muddy Waters song <i>Rollin' Stone</i> (1950) which is actually among the top 500, ranking in at a surprising late 459. The magazine is---with the additional influence of the proverb "a rolling stone gathers no moss"---named for all three of these astounding feats in music history. 

The songwriting duo in the Beatles, John Lennon and Paul McCartney, known together as Lennon-McCartney wrote many hit songs in the 1960s (@fig-tops). Though the songs they wrote for the Beatles were almost always credited to both the young gentlemen, songs written by Paul McCartney were notably more positive. Looking at @fig-sent, we can see that the Beatles songs in the Top 500 tended to have a more positive sentiment, 0.83 on the AFINN's -5 to 5 scale. For reference, Bob Dylan's average song sentiment is around 0.035 and The Rolling Stones around -0.22. This coupled with the fact that the highest ranking Beatles song on the list is <i>Hey Jude</i>---a song written by Paul McCartney for Julian Lennon, John's son---suggests that Paul McCartney could be the primary songwriter for more of the songs on the list. 

### Supplemental Tables

The following tables are here to support your understanding of the above analyses and substantiate the numbers, percentages, and claims made in the text. 

```{r}
#| label: create tables 

# decades table
props <- songs_chart |>
  count(decade) |>
  mutate(Percent = (n/500) * 100) |>
  rename(Count = n, Decade = decade) 

# top artists table
to <- top_artists |>
  count(artist) |>
  add_row(artist = "Total", n = 49) |>
  mutate(Percent = (n/500) * 100) |>
  rename(Artist = artist, Count = n) 

# top 10 songs table
son <- songs_chart |>
  select(Rank = number, Artist = artist, Title = title, Year = year
         , Decade = decade) |>
  slice(1:10) 

```


```{r}
#| label: tbl-dec
#| tbl-cap: Decades

gt(props) |>
  tab_header( title = "Songs on List by Decade") |>
  tab_spanner(# create column-spanning label
    label = "Metrics", columns = c(Count, Percent)) |>
  # turn off alternating row colors
  tab_options(quarto.disable_processing = TRUE)
  
```
As the title implies, this supplemental @tbl-dec breaks down the number of songs and the percentage of the total songs each decade holds. 

~~*~~

```{r}
#| label: tbl-artists
#| tbl-cap: Artists

gt(to) |>
  tab_header(title = "Songs on List by Artist") |>
  tab_spanner(label = "Metrics", columns = c(Count, Percent)) |>
  # turn off alternating row colors
  tab_options(quarto.disable_processing = TRUE)
```
@tbl-artists breaks down the number of songs and the percentage of the list these songs occupy. There is also a breakdown for the three artists' combined songs.

~~*~~

```{r}
#| label: tbl-ten
#| tbl-cap: Top Ten

gt(son) |>
  tab_header(title = "The Top Ten") |>
  tab_spanner(label = "Song Identifier", columns = c(Artist, Title)) |>
  tab_spanner(label = "Release", columns = c(Year, Decade)) |>
  # turn off alternating row colors
  tab_options(quarto.disable_processing = TRUE)
  

```
@tbl-ten shows the top ten songs on the list. We see here that each of the top 3 artists on the list has at least one song in the top 10. 
